digraph ThreatModel {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue];
  edge [fontsize=10];
  splines=true;
  overlap=false;
  nodesep=0.5;
  ranksep=0.6;
  charset="UTF-8";

  {% for boundary in boundaries %}
  subgraph cluster_{{ boundary.safe_name }} {
    label="{{ boundary.escaped_name }}";
    {% if not boundary.is_trusted %}
    fontsize=10;
    {% endif %}
    style="{{ boundary.style_parts | join(',') }}";
    {% if boundary.is_filled %}
    fillcolor="{{ boundary.color }}";
    {% endif %}
    {% if not boundary.is_trusted %}
    color=black;
    {% else %}
    color=red;
    penwidth=3;
    {% endif %}
    {% if boundary.line_style and boundary.line_style != 'solid' %}
    style="{{ boundary.style_parts | join(',') }},{{ boundary.line_style }}";
    {% endif %}
    {% for actor in boundary.actors %}
    "{{ actor.escaped_name }}" {{ actor.node_attrs }};
    {% endfor %}
    {% for server in boundary.servers %}
    "{{ server.escaped_name }}" {{ server.node_attrs }};
    {% endfor %}
  }
  {% endfor %}

  {% for actor in actors_outside_boundaries %}
  "{{ actor.escaped_name }}" {{ actor.node_attrs }};
  {% endfor %}

  {% for server in servers_outside_boundaries %}
  "{{ server.escaped_name }}" {{ server.node_attrs }};
  {% endfor %}

  {% for dataflow in dataflows %}
  "{{ dataflow.escaped_source }}" -> "{{ dataflow.escaped_dest }}" [{{ dataflow.direction }}label="{{ dataflow.label }}"{{ dataflow.edge_attributes }}, fontsize=7, {{ dataflow.class_attribute }}];
  {% endfor %}
}
