---
# Playbook pour le déploiement d'une infrastructure complexe

# Play 1: Configuration de base sur tous les serveurs
- name: Base configuration for all servers
  hosts: all_servers
  become: yes
  tasks:
    - name: Ensure basic security packages are installed
      ansible.builtin.apt:
        name: ['ufw', 'fail2ban']
        state: present

    - name: Set timezone to Europe/Paris
      community.general.timezone:
        name: Europe/Paris

# Play 2: Configuration du serveur de facturation (Billing)
- name: Setup Billing Server (Internet Facing)
  hosts: billing
  become: yes
  tasks:
    - name: Install billing application stack (e.g., Apache, PHP, etc.)
      ansible.builtin.apt:
        name: ['apache2', 'libapache2-mod-php']
        state: present

    - name: Harden firewall for internet access
      ansible.builtin.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - '80'   # HTTP
        - '443'  # HTTPS
        - '22'   # SSH (rate-limited)

# Play 3: Configuration de la DMZ
- name: Setup DMZ Reverse Proxy
  hosts: dmz
  become: yes
  tasks:
    - name: Install Nginx
      ansible.builtin.apt:
        name: nginx
        state: present

    - name: Configure Nginx as reverse proxy for internal web apps
      ansible.builtin.template:
        src: dmz_nginx.conf.j2
        dest: /etc/nginx/sites-available/default
      notify: Restart Nginx

  handlers:
    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

# Play 4: Déploiement de l'application interne
- name: Deploy Internal Web Application
  hosts: internal_web
  become: yes
  tasks:
    - name: Install application server (e.g., Tomcat)
      ansible.builtin.apt:
        name: tomcat9
        state: present

    - name: Deploy application artifact (.war file)
      ansible.builtin.copy:
        src: myapp.war
        dest: /var/lib/tomcat9/webapps/

# Play 5: Configuration de la base de données interne
- name: Setup Internal Database
  hosts: internal_db
  become: yes
  tasks:
    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: postgresql
        state: present

    - name: Configure PostgreSQL for replication (master)
      ansible.builtin.lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: "^#?listen_addresses"
        line: "listen_addresses = '*'"
      when: "inventory_hostname == 'db-master-01'"

# Play 6: Configuration du connecteur externe
- name: Setup External Network Connector
  hosts: external_connector
  become: yes
  tasks:
    - name: Configure firewall rules for external network access
      ansible.builtin.ufw:
        rule: allow
        to_port: "{{ item.port }}"
        to_ip: "{{ item.ip }}"
        proto: tcp
      loop:
        - { ip: '198.51.100.0/24', port: '8443' } # Example external service

# Play 7: Configuration des équipements réseau (Exemple)
- name: Configure Network Devices
  hosts: routers:switches
  gather_facts: no
  connection: network_cli
  become: yes
  become_method: enable
  tasks:
    - name: Configure VLANs on access switches
      cisco.ios.ios_vlans:
        config:
          - name: Internal-WebApp
            vlan_id: 10
          - name: Internal-DB
            vlan_id: 20
      when: "'switches' in group_names"
